swagger: '2.0'
info:
  version: '2.0'
  title: KongaPay Payment Gateway SDK
  contact:
    name: KongaPay Support
    url: 'https://www.kongapay.com/'
    email: support@kongapay.com
  license:
    name: Kongapay
    url: 'https://www.kongapay.com/'
  termsOfService: 'https://www.kongapay.com/page/customerterms'
  x-logo:
    url: 'https://www.kongapay.com/img/logo@2x.png'
  description: |
    # Introduction
    Welcome to the official documentation of KongaPay Payment Gateway SDK. The SDK allows merchants to receive payments on their Website as well as Android and IOS Apps.

    In order to use KongaPay Payment Gateway SDK, <a href="https://www.kongapay.com/merchant/register" target="_blank">sign up as a Merchant on KongaPay</a>. After signup, a Test API Key will be generated for you. Live API Key will be generated for you on meeting all requirements.

    # Authentication
    You authenticate to the
    KongaPay by providing your secret key (test or live public) and source in the request header.

    Never share your secret keys. Keep them guarded and secure.
    The client-side authentication scheme uses one HTTP header named Api-Key.

    # Note
    Test and Live environment is based on the key supplied. Key with *test_* signifies test environment and *live_* signifies live environment

    # Web SDK

    ## JavaScript Implementation

    This section is for developers that pass `callback` as a function and also set `enableFrame` property as true

          <html>
            <script src="https://kongapay-pg.kongapay.com/js/v1/production/pg.js"></script>
            <body>
              <button class="btn btn-success btn-space" type="button" onclick="payWithKPG()"> Pay KPG </button>
              <script>
                function payWithKPG() {
                  KPG.setup({
                    "hash": "c0d20d59c2d97f86113802cddbede266c6c4fc5ff68ce6ea6e2de1c6e7c8c61155698e47b37920ed95dc68a65f97c287992ec21573f0a7742a9d34ca8e4b6db9",
                    "amount": 12780,
                    "description": "long thing",
                    "email": "test@konga.com",
                    "merchantId": "mer_001_TESTM",
                    "reference": "TEST1XCDF",
                    "firstname" : "Chioma",
                    "lastname" : "Adeleke",
                    "phone" : "08000000000",
                    "metadata": [{
                      "name": "address",
                      "value": "1 Redemption Crescent, Gbagada, Lagos."
                    }],
                    "enableFrame": true,
                    "callback" : "returnResult",
                    "selectedChannelIdentifier" : "chn_002_deb1t",
                    "customerId" : "1"
                  });
                }
                function returnResult(err, data){
                  console.log(err)
                }
              </script>
            </body>
          </html>

    ## Form Implementation

      Form Production url: `https://www.kongapay.com/paymentgateway`

          <form method="post" action="https://www.kongapay.com/paymentgateway">
            <input type="text" value="c0d20d59c2d97f86113802cddbede266c6c4fc5ff68ce6ea6e2de1c6e7c8c61155698e47b37920ed95dc68a65f97c287992ec21573f0a7742a9d34ca8e4b6db9" name="hash"/>
            <input type="number" value="12780" name="amount"/>
            <input type="text" value="tesing" name="description">
            <input type="email" value="lukmon.alebiosu@konga.com" name="email">
            <input type="text" value="mer_001_TESTM" name="merchant_id">
            <input type="text" value="kongapay_001" name="reference">
            <input type="text" value="Chioma" name="firstname">
            <input type="text" value="Adeleke" name="lastname">
            <input type="text" value="08000000000" name="phone">
            <input type="text" value="https://kongapay.com" name="callback">
            <input type="text" value="1" name="customerId">
            <input type="submit" value="submit">
          </form>

    # Android SDK

    Before adding the kongapay android SDK include the maven repository below in the project level gradle build
    ```
    maven {
        url "https://dl.bintray.com/kongapay/maven"
    }
    ```

    To include the Konga pay android SDK dependency
    ```
    implementation 'com.kongapay:paymentgatewayv2:2.0.1'
    ```

    To pass these parameters to the SDK Create an object of the `Params` class after importing it from the sdk, like so
    ```
    ...
    import com.kongapay.paymentgatewayv2.Params;
    ...
    ```

    Use the create method to store the required parameters, like so
    ```
    Params params = Params.create(
        ...
    );
    ```

    Call the `initiatePayment` method of the PaymentGatewaySdk after importing it, like so
    ```
    ...
    import com.kongapay.paymentgatewayv2.PaymentGatewaySdk;
    ...
    ```

    A Request code will be required to be passed alongside the params that will be passed into the initiatePayment method, and the activity calling the method. The request code can be any integer value
    ```
    ...
    private static int REQUEST_CODE = 151;
    ...
    ```

    Assuming the call is coming from the main activity the initiatePayment call should look like so
    ```
    PaymentGatewaySdk.inititatePayment(REQUEST_CODE, MainActivity.this, params);
    ```

    To get the result back from the SDK the `onActivityResult` method should be overridden, and the Payment result class imported from the SDK, like so
    ```
    ...
    import import com.kongapay.paymentgatewayv2.PaymentResult;
    ...

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        PaymentResult result = PaymentGatewaySdk.getResult(data);
        ...
    }
    ```

    A sample implementation of the SDK is shown below...
    ```
    ...
    import com.kongapay.paymentgatewayv2.Params;
    import com.kongapay.paymentgatewayv2.PaymentGatewaySdk;
    import com.kongapay.paymentgatewayv2.PaymentResult;
    ...

    public class MainActivity extends AppCompatActivity {
      private static int REQUEST_CODE = 153;

      @Override
      protected void onCreate(Bundle savedInstanceState) {
        ...
        Params params = Params.create(
          merchantId,
          merchantKey,
          generateTransactionRef(),
          description,
          amountInKobo,
          customerEmail,
          customerPhone
        );

        params.setCustomerId("20");
        PaymentGatewaySdk.initiatePayment(REQUEST_CODE, MainActivity.this, params);
        ...
      }
      @Override
      protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if(requestCode == REQUEST_CODE) {
          Payment result = PaymentGatewaySdk.getResult(data);

          boolean isSuccessful = result.isSuccessful();
          String status = result.getStatus();
          String ref = result.getReference();

          Toast.makeText(this, status + (isSuccessful ? ": " + ref : "")

          return;
        }
      }
      private String generateTransactionRef() {
        return "REF" + System.currentTimeMillis();
      }
      ...
    }

    ```

    # iOS SDK

    ### Coming Soon


host: kongapay.com
basePath: /
schemes:
  - https
x-servers:
  - url: https://ignite.kongapay.com/v1/
    description: Live Server
produces:
  - application/json
consumes:
  - application/json
securityDefinitions:
  ApiKey:
    description: |
      When you sign up for an account, you are given your API key.
      To do so please follow this link: https://www.kongapay.com/merchant/register
    name: Api-Key
    type: apiKey
    in: header
security:
  - ApiKey: []
paths:
  /paymentgateway:
    post:
      tags:
        - Parameters
      summary: Parameters
      description: 'Initiate payment by making a redirect POST request'
      parameters:
        - in: body
          name: body
          description: Configuration parameters for Payment Gateway SDK
          required: true
          schema:
            type: object
            properties:
              amount:
                type: integer
                description: Transaction Amount in kobo
              description:
                type: string
                description: Short description of the transaction
              hash:
                type: string
                description: Required for web implementation generated with so - sha512(amount|public_key|reference)
              merchantKey:
                type: string
                description: This is your public_key and is required only for mobile (iOS and Android) implementation
              email:
                type: string
                format: email
                description: Customer email address
              merchantId:
                type: string
                description: This is will be provided by KongaPay on registration
              reference:
                type: string
                description: Transaction reference, must be unique for every transaction request
              callback:
                type: string
                description: Required for web implementation, this is a url to redirect customer to or function to call after processing payment
              metadata:
                type: object
                description: This should contain an array of object about the transaction.
              enableFrame:
                type: boolean
                description: Setting to true will load the SDK in an iframe. false by default
                default: false
              phone:
                type: string
                description: Customer's Phone Number
              firstname:
                type: string
                description: Customer's First Name
              lastname:
                type: string
                description: Customer's Last Name
              customerId:
                type: string
                description: Customer's email/phone/ID. Used to save customer's payment details where permitted
            required:
              - amount
              - description
              - hash
              - merchantId
              - merchant_reference
              - callback
              - merchantKey
      responses:
        '200':
          description: Payment Successful
          schema:
            type: object
            properties:
              code:
                type: string
                enum:
                  - "00"
                description: test
              message:
                type: string
                enum:
                  - Payment Successful
              status:
                type: string
                enum:
                  - success
              merchant_refernce:
                type: string
        '100':
          description: Missing Parameters
          schema:
            type: object
            properties:
              code:
                type: string
                enum:
                  - "E00"
              message:
                type: string
                enum:
                  - Missing Parameters
              status:
                type: string
                enum:
                  - failed
              merchant_refernce:
                type: string
        '400':
          description: This returns server side error
          schema:
            type: object
            properties:
              code:
                type: string
                enum:
                  - "E01"
              message:
                type: string
                enum:
                  - This returns server side error
              status:
                type: string
                enum:
                  - failed
              merchant_refernce:
                type: string

  '/payment/requery/{merchant_reference}':
    get:
      tags:
        - Requery
      summary: KPG Transaction Requery Documentation
      description: 'Once a transaction is completed, merchants can confirm the status of a transaction by calling'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Configuration options for KPG web SDK
          required: true
          schema:
            type: object
            properties:
              amount:
                type: integer
                description: Indicates the amount the customer inputed
              originalAmount:
                type: integer
                description: Indicates the amount before the user made a new transaction
              identifier:
                type: string
                description: A 'receipt' id appended to the transaction
              createdAt:
                type: string
                description: The date, and time the transaction was carried out
              reference:
                type: string
                description: The reference generated for the merchant. Used for identification of the merchant. Not to be confused with
                             merchantId which is a numeric value
              customerId:
                type: string
                description: The id entered by the user
              description:
                type: string
                description: The description given by the user
              status:
                type: string
                description: The status of the transaction
              successful:
                type: boolean
                description: Returns true to indicate that payment was a success
      responses:
        '200':
          description: Payment Successful
          schema:
            type: object
            properties:
              code:
                type: string
                enum:
                  - 200
                description: test
              message:
                type: string
                enum:
                  - Payment Successful
              status:
                type: string
                enum:
                  - success
              merchant_refernce:
                type: string
        '100':
          description: Missing Parameters
        '101':
          description: Server side errors

  /payment/refund:
    post:
      tags:
        - Refund
      summary: Refund Endpoint Documentation for KPG
      description: 'Hello World'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Configuration options for KPG web SDK
          required: true
          schema:
            type: object
            properties:
              amount:
                type: integer
                description: Indicates the amount the customer inputed
              reference:
                type: integer
                description: Unique ID passed to KPG SDK on initialization for the transaction
      responses:
        '200':
          description: Transaction is successful.
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                  - success
        '400':
          description: Transaction Failed.
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                  - failed

  /merchant/banks:
    get:
      tags:
        - Get Banks
      summary: Get all Banks
      description: 'Endpoint to get all banks'
      parameters:
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                  - Success
              data:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      type: string
                      description: 2
                    name:
                      type: string
                      description: Access Bane
                    status:
                      type: string
                      description: active
                    logo_url:
                      type: string
                      description: https://s3.amazonaws.com/www_konga_com/bank_logo/access.png
                    is_mandate:
                      type: string
                      description: 0
                    nip_bank_code:
                      type: string
                      description: 044
                    is_bvn_mandate:
                      type: string
                      description: 0

  '/merchant/account/{account_number}/bank/{bank_code}':
    get:
      tags:
        - Get Account Name
      summary: Get Account Name
      description: 'Endpoint to get Account Name'
      parameters:
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                  - Success
              data:
                type: object
                properties:
                  name:
                    type: string
                    enum:
                      - John Doe
        '404':
          description: Name not found
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                  - error
              code:
                type: string
                enum:
                  - E0032
              message:
                type: string
                enum:
                  - Name not found